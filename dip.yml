version: '7.1'

# Docker Composeに渡すデフォルトの環境変数を定義する
environment:
  RAILS_ENV: development

compose:
  files:
    - .dockerdev/compose.yml
  project_name: bondgate

interaction:
  # 必要な依存関係（データベースなど）とともに
  # Railsコンテナを起動し、コンテナ内でターミナルを開く
  runner:
    description: Open a Bash shell within a Rails container (with dependencies up)
    service: rails
    command: /bin/bash

  # 依存するサービスを起動せずにRailsコンテナを実行する
  # （Railsと無関係のスクリプトの実行に便利）
  shell:
    description: Run an arbitrary script within a container (or open a shell without deps)
    service: rails
    command: /bin/bash
    compose:
      run_options: [ no-deps ]

  # Bundlerコマンドのショートカット
  bundle:
    description: Run Bundler commands
    service: rails
    command: bundle

  # RSpecを実行するショートカット
  rspec:
    description: Run RSpec commands
    service: test
    command: bundle exec rspec

  test:
    description: Open a Bash shell within a test container (with dependencies up)
    service: test
    command: /bin/bash

  rails:
    description: Run Rails commands
    service: rails
    command: bundle exec rails
    subcommands:
      s:
        description: Run Rails server at http://localhost:3000
        service: web
        compose:
          run_options: [service-ports, use-aliases]
      db:
        description: Run Postgres psql console
        service: rails
        command: bundle exec rails dbconsole -p

  worker:
    description: Run delayed job worker
    service: worker
    compose:
      method: up
      run_options: [detach]

  yarn:
    description: Run Yarn commands
    service: rails
    command: yarn
    compose_run_options: [ no-deps ]

# ※環境構築時に1回だけ実行すること
# 再度実行すると、volumesを全部消してしまうので、時間がかかります。
# 開発環境が壊れたので初期化したい時には使ってもらって大丈夫です。
provision:
  - dip compose down --volumes
  - dip compose up -d postgres
  - dip bundle install
  - dip runner -c "bin/rails db:migrate:reset config:merge db:seed procedure:setup"
